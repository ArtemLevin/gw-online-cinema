version: "3.9"

services:
  gateway:
    image: nginx:1.25
    container_name: gateway
    depends_on:
      - auth_service
      - content_api
      - ugc_service
      - admin_panel
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: cinema-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cinema}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cinema}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cinema}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: cinema-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: cinema-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ES_LOG_LEVEL=error
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      retries: 20
      start_period: 60s
      timeout: 10s
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:23.3
    container_name: cinema-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-default}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 10s
      retries: 20
      start_period: 30s
      timeout: 5s
    restart: unless-stopped

  auth_service:
    build: ./services/auth_service
    container_name: auth-service
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-cinema}:${POSTGRES_PASSWORD:-cinema}@db:5432/${POSTGRES_DB_AUTH:-auth_db}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - JWT_SECRET=${JWT_SECRET:-supersecretjwt}
      - JWT_ALG=${JWT_ALG:-HS256}
      - ACCESS_TOKEN_EXPIRES_MIN=${ACCESS_TOKEN_EXPIRES_MIN:-30}
      - REFRESH_TOKEN_EXPIRES_MIN=${REFRESH_TOKEN_EXPIRES_MIN:-43200}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    expose:
      - "8001"
    restart: unless-stopped

  content_api:
    build: ./services/content_api
    container_name: content-api
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - ELASTIC_HOST=${ELASTIC_HOST:-elasticsearch}
      - ELASTIC_PORT=${ELASTIC_PORT:-9200}
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    expose:
      - "8002"
    restart: unless-stopped

  ugc_service:
    build: ./services/ugc_service
    container_name: ugc-service
    environment:
      - CLICKHOUSE_HOST=${CLICKHOUSE_HOST:-clickhouse}
      - CLICKHOUSE_HTTP_PORT=${CLICKHOUSE_HTTP_PORT:-8123}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-default}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
    depends_on:
      clickhouse:
        condition: service_healthy
    expose:
      - "8003"
    restart: unless-stopped

  admin_panel:
    build: ./services/admin_panel
    container_name: admin-panel
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-secret-key}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB_ADMIN:-admin_db}
      - POSTGRES_USER=${POSTGRES_USER:-cinema}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cinema}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-adminpass}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8004"
    restart: unless-stopped

volumes:
  pg_data:
